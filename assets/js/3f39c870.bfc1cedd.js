"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[763],{95114:e=>{e.exports=JSON.parse('{"functions":[{"name":"toNumber","desc":"Converts a string to a number. The output number is in milliseconds unless\\na unit is specified.\\n\\n```lua\\nms.toNumber(\\"1m 30s\\") -- 90000\\nms.toNumber(\\"1m 30s\\", \\"s\\") -- 90\\n```","params":[{"name":"value","desc":"","lua_type":"string"},{"name":"unit","desc":"","lua_type":"Unit?"}],"returns":[{"desc":"","lua_type":"number\\n"}],"function_type":"static","source":{"line":67,"path":"src/init.lua"}},{"name":"toString","desc":"Converts a number to a string. The number is assumed to be in milliseconds.\\nunless an inputUnit is specified. Values are rounded to the nearest whole\\nnumber. Weeks are not displayed. Milliseconds are not displayed unless the\\ninput value is less than 1 second.\\n\\n```lua\\nms.toString(9000) -- \\"9s\\"\\nms.toString(9001) -- \\"9s\\"\\nms.toString(90, \\"long\\") -- \\"90 milliseconds\\"\\n\\nms.toString(9, nil, \\"s\\") -- \\"9s\\"\\nms.toString(9, \\"long\\", \\"s\\") -- \\"9 seconds\\"\\n```","params":[{"name":"value","desc":"","lua_type":"number"},{"name":"format","desc":"","lua_type":"\\"long\\" | \\"short\\"?"},{"name":"inputUnit","desc":"","lua_type":"Unit?"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"static","source":{"line":94,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"UnitMillisecond","desc":"","lua_type":"\\"ms\\" | \\"msec\\" | \\"msec\\" | \\"millisecond\\" | \\"milliseconds\\"","private":true,"source":{"line":7,"path":"src/Constants.lua"}},{"name":"UnitSecond","desc":"","lua_type":"\\"s\\" | \\"sec\\" | \\"secs\\" | \\"second\\" | \\"seconds\\"","private":true,"source":{"line":12,"path":"src/Constants.lua"}},{"name":"UnitMinute","desc":"","lua_type":"\\"m\\" | \\"min\\" | \\"mins\\" | \\"minute\\" | \\"minutes\\"","private":true,"source":{"line":17,"path":"src/Constants.lua"}},{"name":"UnitHour","desc":"","lua_type":"\\"h\\" | \\"hr\\" | \\"hrs\\" | \\"hour\\" | \\"hours\\"","private":true,"source":{"line":22,"path":"src/Constants.lua"}},{"name":"UnitDay","desc":"","lua_type":"\\"d\\" | \\"day\\" | \\"days\\"","private":true,"source":{"line":27,"path":"src/Constants.lua"}},{"name":"UnitWeek","desc":"","lua_type":"\\"w\\" | \\"wk\\" | \\"wks\\" | \\"week\\" | \\"weeks\\"","private":true,"source":{"line":32,"path":"src/Constants.lua"}},{"name":"UnitMonth","desc":"","lua_type":"\\"mo\\" | \\"mos\\" | \\"month\\" | \\"months\\"","private":true,"source":{"line":37,"path":"src/Constants.lua"}},{"name":"UnitYear","desc":"","lua_type":"\\"y\\" | \\"yr\\" | \\"yrs\\" | \\"year\\" | \\"years\\"","private":true,"source":{"line":42,"path":"src/Constants.lua"}},{"name":"Unit","desc":"","lua_type":"UnitMillisecond | UnitSecond | UnitMinute | UnitHour | UnitDay | UnitWeek | UnitMonth | UnitYear","source":{"line":48,"path":"src/Constants.lua"}}],"name":"ms","desc":"Provides functions for converting between milliseconds and strings.\\n\\n```lua\\nlocal ms = require(packages.ms)\\n\\nms.toNumber(\\"1m 30s\\") -- 90000\\nms.toString(90000) -- \\"1m 30s\\"\\n```\\n\\nms also employs some metatable magic to allow for calling the module\\nas a function. ms will automatically determine whether to call\\n`ms.toNumber` or `ms.toString` based on the type of the first argument.\\n\\n```lua\\nms(\\"1m 30s\\") -- 90000\\nms(90000) -- \\"1m 30s\\"\\nms(ms(\\"1m 30s\\")) -- \\"1m 30s\\"\\n\\nms(\\"1d\\", \\"s\\") -- 86400\\nms(90000, \\"long\\") -- \\"1 minute, 30 seconds\\"\\n```","source":{"line":156,"path":"src/init.lua"}}')}}]);